[{"title":"Python基础教程—学习笔记","date":"2017-04-15T06:54:16.000Z","path":"2017/04/15/Python基础教程—学习笔记/","text":"书后十个项目内容汇总项目1：即时标记展现文本处理能力，使用正则表达式将纯文本文件写成标记语言格式的文本。（HTML/XML等）难点是正则表达式（’re’）的使用，以及类，模块，生成器的使用。 项目2：画幅好画通过在线数据，创建图形，保存为PDF文件。使用了‘reportlab’，‘urllib’模块。 项目3：万能的XML将包含网站信息的XML文件转换为目录及网页。使用了’xml.sax’解析器中的‘ContentHandler’和‘parse’模块，需要些许了解HTML内容。 项目4：新闻聚合网络信息收集代理程序，并编译为报告。通过NNTP新闻组服务器和网页HTML抓取新闻内容，发布到文本和html中。感觉类似于爬虫，可以多试一下。 项目5：虚拟茶话会实现多人网络实时交互聊天功能。以标准库中asyncore和asynchat模块为基础建立服务器，需要理解socket套接字含义，客户端使用telnet。 项目6：使用CGI进行远程编辑实现网络远程文档编辑功能，基于CGI方式。建立网站的基本内容，使用cgi模块，并且运用python库内的CGIHTTPServer模块生成服务器。例如：在目录文件中运行cmd，“python -m CGIHTTPServer 端口号”，链接为“localhost: 端口号/文件名”，注意.cgi(windows中可以使用.py)文件必须放在“cgi-bin”文件夹下。 项目7：自定义电子公告板实现通过Web发布和回复信息的系统，即网络论坛。使用MySQL，搭配MySQLdb模块（mysql-python），需要掌握如何安装和操作。运行“mysql -u root -p”，可以进入MySql里查看，CGI方法与项目6相同。 项目8：使用XML-RPC进行文件共享实现P2P的文件共享程序，节点之间的文件传输。使用自带‘xmlrpclib’和‘SimpleXMLRPCServer’模块。 项目9：文件共享2 - GUI版本为项目8实现为GUI的可视化版本。使用wxPython工具包，基本是一些窗口化的设置。 项目10：DIY街机游戏主要的游戏内容就是，游戏开始会从屏幕上方不断随便的掉一些铁块，在屏幕下方有一个小香蕉是受你控制的，你需要不断的左右移动来躲避铁块。在你躲避完一定数量的铁块之后，就会进入下一关。下一关依然是让你躲铁块，不过铁块下降的速度就快了很多。在游戏中你可以按下任意键暂停，再次按则继续，按下ESC键退出。使用pygame模块来完成，‘pip install pygame’。 网上例子，可供参考：https://www.the5fire.com/beginning-python-10-projects.html","tags":[]},{"title":"发布文章的步骤","date":"2017-04-15T06:40:37.000Z","path":"2017/04/15/发布文章的步骤/","text":"发布文章的步骤： hexo new 创建文章 Markdown语法编辑文章 部署（所有打开CMD都是在blog目录下） 1234hexo clean #清除缓存 网页正常情况下可以忽略此条命令hexo generate #生成hexo server #启动服务预览，非必要，可本地浏览网页hexo deploy #部署发布 简写Tips： 12345hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章hexo p == hexo publishhexo g == hexo generate#生成hexo s == hexo server #启动服务预览hexo d == hexo deploy#部署 如果在执行 hexo deploy 后,出现 error deployer not found:github 的错误，执行： 1npm install hexo-deployer-git --save","tags":[]},{"title":"测试用文章","date":"2017-04-01T05:37:30.000Z","path":"2017/04/01/测试用文章/","text":"‘请关注https://BroganZ.github.io/‘ #笨办法学Python—学习笔记@(Python)[阅读笔记] [toc] ##推荐站点github.com 强力推荐bitbucket.org 推荐launchpad.net 页面好low，弃！koders.com 貌似关了 coding.net 国内的 ##指令备忘 Windows推荐：文本编辑器：gedit运行终端：PowerShell需要熟悉Terminal操作语言 # @注释print “” @打印print “%s %d %r” % (文本，数字，任意格式)\\n、\\t @反斜杠后加上字母或者字符“”” @三个双引号或者三个单引号可使得一段文字保持格式raw_input()、raw_input(“xxx”) @ 输入内容from sys imort argv @中断运行时读取参数（python ex13.py first 2nd 3rd）open(filename) @打开文件file.close() @关闭文件，并保存file.read() @读取文件file.seek() @跳转文件行数file.readline() @读取文件中的一行file.truncate() @清空文件file.write() @写入文件，逐行def funcition_name(arg1, arg2, …): @定义函数，函数内部每行前空4个空格list.pop(1) @提取列表中第一个值，并从数组中删除list.appand(1) @列表中添加元素‘#’.join(list) @用符号’#’链接列表中的元素，返回一个字符串定义函数时用‘“”””’（三个引号）包含的内容作为文档注解，可以用help(function)来显示 Keywords @关键字列表 123#查看关键字import keywordkeyword.kwlist 1 and  del  from  not  while  as  elif  global  or  with  assert  else  if  pass  yield  break  except  import  print  class  exec  in  raise  continue  finally  is  return  def  for  lambda  try 数据类型 1 True  False  None  strings  numbers  floats  lists 字符串转义序列(Escape Sequences) 1 \\\\  \\&apos;  \\&quot;  \\a  \\b  \\f  \\n  \\r  \\t  \\v 字符串格式化(String Formats) 1 %d  %i  %o  %u  %x  %X  %e  %E  %f  %F  %g  %G  %c  %r  %s  %% 操作符号 1 +  -  *  **  /  //  %  &lt;  &gt;  &lt;=  &gt;=  ==  !=  &lt;&gt;  ( )  [ ]  &#123; &#125;  @  ,  :  .  =  ;  +=  -=  *=  /=  //=  %=  **= super(child class, self) @调用父类里的版本 https://www.python.org/dev/peps/pep-0008/Python 编码规范 nosetests @自动化测试，windows powershell里使用assert @测试函数（这块没怎么弄懂）","tags":[]},{"title":"Hello World","date":"2017-04-01T05:00:04.793Z","path":"2017/04/01/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]